#include <ostream>
#include <cassert>

#include "../../subsets/fixed_size.h"

void test_fixed_size_bits_end()
{
  std::cout << std::format("  {}", __func__) << std::endl;

  {
    ss::bits<16> bits{};
    ss::fixed_size::impl::end(bits, 9, 16);
    assert(bits[0] == 0b1'111111111'0000000);
  }

  {
    ss::bits<42> bits{};
    ss::fixed_size::impl::end(bits, 23, 42);
    assert(bits[0] == 0b111'11111'11111'11111'11111'10000'00000'00000'00000);
  }


  {
    ss::bits<77> bits{};
    ss::fixed_size::impl::end(bits, 12, 77);
/*
    result:

        12 ones
           │
      ┌────┴─────┐
    0011111111111110'0000000000000000000000000000000000000000000000000000000000000000
    9876543210987654 3210987654321098765432109876543210987654321098765432109876543210
    7777777777666666 6666555555555544444444443333333333222222222211111111110000000000
      ││
      │└ last
      └─ end
*/

    assert(bits[0] == 0);
    assert(bits[1] == 0b01111'11111'11110);
  }

  {
    ss::bits<77> bits{};
    ss::fixed_size::impl::end(bits, 66, 77);
/*
    result:

         14 ones       53 ones
            │             │
      ┌─────┴──────┐ ┌────┴──────────────────────────────────────────────┐
    0011111111111111'1111111111111111111111111111111111111111111111111111100000000000
    9876543210987654 3210987654321098765432109876543210987654321098765432109876543210
    7777777777666666 6666555555555544444444443333333333222222222211111111110000000000
      ││
      │└ last
      └─ end
*/
    assert(bits[0] == 0xffff'ffff'ffff'f800);
    assert(bits[1] == 0b01111'11111'11111);
  }

}